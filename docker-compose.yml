version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '4369:4369'
      - '5672:5672'
      - '25672:25672'
      - '15672:15672'
    volumes:
      - /media/rabbitmq_data:/bitnami
  postgres-compose:
    image: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2019!"      
    ports:
      - "15432:5432"
    volumes:
      - /media/pg:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      
  pgadmin-compose:
      image: dpage/pgadmin4
      environment:
        PGADMIN_DEFAULT_EMAIL: "dipeshchand747@gmail.com"
        PGADMIN_DEFAULT_PASSWORD: "PgAdmin2019!"        
      ports:
        - "16543:80"
      depends_on:
        - postgres-compose
      links:
        - postgres-compose

  api_rest:
    build: REST_API
    links:
      - rabbitmq
      - postgres-compose
    ports:
      - 5000:5000
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2019!"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "postgres-compose"
      POSTGRES_DB: "postgres"
      QUEUE_SERVER: "rabbitmq"
      HOST_MONGO: "mongo"
      MONGO_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    depends_on:
      - rabbitmq
      - postgres-compose
      - mongo
      
  voice_activity_decoder:
    build: voice_activity_decoder
    environment:
      NUM_WORKERS: "6"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2019!"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "postgres-compose"
      POSTGRES_DB: "postgres"
      QUEUE_SERVER: "rabbitmq"
      HOST_MONGO: "mongo"
      MONGO_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    links:
      - rabbitmq
      - postgres-compose
      - mongo
    depends_on:
      - rabbitmq
      
  acoustic_feature_extractor:
    build: acoustic_feature_extractor
    environment:
      NUM_WORKERS: "6"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2019!"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "postgres-compose"
      POSTGRES_DB: "postgres"
      QUEUE_SERVER: "rabbitmq"
      MONGO_PORT: "27017"
      HOST_MONGO: "mongo"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    links:
      - rabbitmq
      - mongo
      - postgres-compose
      
  audio_extractor:
    build: audio_extractor
    environment:
      NUM_WORKERS: "6"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2019!"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "postgres-compose"
      POSTGRES_DB: "postgres"
      QUEUE_SERVER: "rabbitmq"
      HOST_MONGO: "mongo"
      MONGO_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!      
    links:
      - rabbitmq
      - mongo
      - postgres-compose

  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:      
      ME_CONFIG_BASICAUTH_USERNAME: desam47
      ME_CONFIG_BASICAUTH_PASSWORD: MongoExpress2019!
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    links:
      - mongo
    depends_on:
      - mongo

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: MongoDB2019!
      MONGO_INITDB_DATABASE: topic_segmentation
    ports:
      - "27017:27017"
    volumes:
      - /media/MongoDB:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      
  asr_client:
    build: asr_client
    environment:
      NUM_WORKERS: "6"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2019!"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "postgres-compose"
      POSTGRES_DB: "postgres"
      QUEUE_SERVER: "rabbitmq"
      HOST_MONGO: "mongo"
      MONGO_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
      GSTREAM_PORT: 80
      ASR_SERVER: "asr"
    links:
      - rabbitmq
      - postgres-compose
      - mongo
      - asr
    depends_on:
      - asr
      
  asr:
    build: asr_server
    volumes:
      - /media/kaldi_models:/opt/test/models
      - ./sample_english_nnet2.yaml:/opt/test/models/sample_english_nnet2.yaml
    ports:
      - "9999:80"
      
  aggregator_client:
    build: aggregator_client
    environment:
      NUM_WORKERS: "6"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2019!"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "postgres-compose"
      POSTGRES_DB: "postgres"
      QUEUE_SERVER: "rabbitmq"
      HOST_MONGO: "mongo"
      MONGO_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    links:
      - rabbitmq
      - postgres-compose
      - mongo
    depends_on:
      - rabbitmq
      
  segmentation_algorithm:
    build: segmentation_algorithm
    environment:
      NUM_WORKERS: "6"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "Postgres2019!"
      POSTGRES_PORT: "5432"
      POSTGRES_HOST: "postgres-compose"
      POSTGRES_DB: "postgres"
      QUEUE_SERVER: "rabbitmq"
      HOST_MONGO: "mongo"
      MONGO_PORT: "27017"
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: MongoDB2019!
    links:
      - rabbitmq
      - postgres-compose
      - mongo
    depends_on:
      - rabbitmq
    volumes:
      - /media/word2vec:/word2vec
